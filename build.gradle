plugins {
    id 'java'
    id 'war'
    id 'maven-publish'
    id 'org.springframework.boot' version libs.versions.spring.boot
    id 'org.sonarqube' version '4.2.1.3168'
    id 'application'
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

bootJar {
//    archiveFileName = 'module4-fat.jar' // use to set entire filename
    archivesBaseName = 'module4'
    archiveAppendix = ''
    archiveVersion = ''
    archiveClassifier = 'fat'
}

war {
//    archiveFileName = 'module4-thin.war' // use to set entire filename
    archivesBaseName = 'module4'
    archiveAppendix = ''
    archiveVersion = ''
    archiveClassifier = 'thin'
}

bootWar {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
//            groupId = '<groupId>'
//            artifactId = '<artifactId>'
//            version = '<version>
            from components.java
            artifact 'build/libs/module4-thin.war'
        }
    }
    repositories {
        maven {
            url 'https://dan-587499190148.d.codeartifact.eu-central-1.amazonaws.com/maven/MyArtifacts/'
            credentials {
                username "aws"
                password System.getProperty('codeartifact.auth.token')
//                password System.getenv('CODEARTIFACT_AUTH_TOKEN')
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.9"
//    applyTo run
//    reportsDirectory = file("$buildDir/reports")
//    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = true
//        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

testCodeCoverageReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = true
    }
}

sonar {
    properties {
        property "sonar.projectKey", "module4"
        property "sonar.host.url", "http://localhost:9000"
//        property "sonar.projectKey", "danpro_epamlabmodule6"
//        property "sonar.organization", "danpro"
//        property "sonar.host.url", "https://sonarcloud.io"
    }
}

dependencies {
    implementation project(':web_layer')

    implementation libs.spring.boot.web
    implementation libs.spring.boot.devtools
    implementation libs.spring.boot.aop
    implementation libs.log4j.core
    implementation libs.jasypt.starter
    implementation libs.amazon.xray
    implementation libs.amazon.codeguru.profiler

    providedRuntime libs.spring.boot.tomcat

    testImplementation libs.junit.api
    testRuntimeOnly libs.junit.engine
}

tasks.named('test') {
    useJUnitPlatform()
//    finalizedBy jacocoTestReport // use it when you want to create jacoco report after build and test
}

tasks.named('check') {
//    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
    dependsOn testCodeCoverageReport
}